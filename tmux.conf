# Options
# remove delay after ESC
set-option -s escape-time 0
set-option -s history-file ~/.tmux_history

# set the default terminal
set-option -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",*256col*:Tc"
set-window-option -g xterm-keys on

# window renaming
set-window-option -g allow-rename off
set-window-option -g automatic-rename on

# status line changes
set-option -g status-keys vi
set-option -g status-interval 1

set-option -g status-left '#[fg=brightgreen][#[fg=magenta]'
set-option -ag status-left '#(printf "%%-12s" #{b:pane_current_path})'
set-option -ag status-left '#[fg=brightgreen]]#[default] '
set-option -g status-left-length 20

set-option -g status-right '#[default]'
set-option -ag status-right '#{prefix_highlight}'
set-option -ag status-right '#[fg=brightgreen]['
set-option -ag status-right '#[fg=magenta]#{host_short}:'
set-option -ag status-right '#[fg=red]#{session_name} '
set-option -ag status-right '#[fg=cyan]%m/%d %H:%M'
set-option -ag status-right '#[fg=brightgreen]]#[default]'
set-option -ag status-right '#{battery_status_bg}#{battery_graph}'

set-option -g status-justify left
set-option -g status-style "fg=white,bold,bg=black"
set-window-option -g window-status-style "fg=colour252,bg=default"
set-window-option -g window-status-last-style "fg=colour220,bg=default"
set-window-option -g window-status-current-style "fg=black,bg=colour220"

win_name='echo "#W" | sed -E -e "s/^bash$/#{b:pane_current_path}/" -e "s/^vim$/vim-#{b:pane_current_path}/"'
set-window-option -g window-status-format "#I:#($win_name)#F"
set-window-option -g window-status-current-format "#I.#P:#($win_name)#F"

set-option -g message-style "fg=black,bold,bg=colour166"
set-option -g message-command-style "fg=colour166,bg=black"

set -g pane-active-border-style 'fg=brightred'

# prefer screen prefix
unbind C-b
set-option -g prefix C-a

# extend repeat-time
set-option -g repeat-time 700

# vi keys in copy mode
set-window-option -g mode-keys vi

# Scroll History
set-option -g history-limit 30000

# display status line messages for 2secs
set-option -g display-time 2000

# Start window numbering at 1
set-option -g base-index 1
set-option -g pane-base-index 1

# set window title to current window name
set-option -g set-titles on
set-option -g set-titles-string '#I.#P:#W [#h:#S]'

set-option -g focus-events on

# Aggresive resize constrains only windows (not the entire session) to the
#   client with the smallest terminal-window size.
set-window-option -g aggressive-resize on

#Automatically renumber windows
set-option -g renumber-windows on

# Keybinding
# Last Window
unbind-key l
bind-key C-a last-window

# New Window
bind-key C-c new-window
bind-key C new-window -at: -c '#{pane_current_path}'

# | = horizontal  split
unbind-key %
bind-key | split-window -h -c '#{pane_current_path}'
bind-key \\ split-window -h -f -c '#{pane_current_path}'

# - = vertical split
unbind-key '"'
bind-key - split-window -v -c '#{pane_current_path}'
bind-key _ split-window -v -f -c '#{pane_current_path}'

# " = choose-window
bind-key '"' choose-window

# Smart pane switching with awareness of vim splits

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-K" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# restore C-hjkl functionality
bind-key C-h send-keys C-h
bind-key C-j send-keys C-j
bind-key C-k send-keys C-k
# clear screen and history
bind-key C-l send-keys C-l \; run-shell 'sleep .5' \; clear-history

# r = respawn after exit or disconnect (zombie)
bind-key C-r respawn-window

# x kill window
unbind-key &
bind-key C-x confirm-before -p "kill-window #{window_name}? (y/n)" kill-window

# Send sequence to nested tmux session
bind-key -n c-s send-prefix

# Rebind rotate window as repeatable
bind-key -r C-o rotate-window

# quick access to man page without opening new split
bind-key / command-prompt -p "man" "split-window -h -l 100 'exec man %%'"

# source tmux config file
bind-key r source-file ~/.tmux.conf \; display-message "source-file done"

# highlight active pane for a half second
bind-key Enter set-option window-active-style bg=colour160 \; run-shell 'sleep .5s' \; set-option window-active-style bg=default

# Copy pane content to a file
# bind-key C-p pipe-pane -o 'cat >>~/output.#I-#P'

# Mac OS fix for pbcopy, pbpaste and launchctl
if-shell "uname | grep -q Darwin" "source-file .tmux.conf.macosx" "source-file .tmux.conf.linux"

# fix window window name after ssh??
# set-window automatic-rename

# remove q as copy-mode cancel
unbind-key -T copy-mode q
unbind-key -T copy-mode-vi q
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys -X cancel

# easier and faster switching between next/prev window
bind-key -r C-p previous-window
bind-key -r C-n next-window

# TPM - Tmux Plugin Manager
# https://github.com/tmux-plugins/tpm
# git clone git@github.com:tmux-plugins/tpm.git ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'

# https://github.com/tmux-plugins/tmux-battery
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @batt_remain_short true

# https://github.com/tmux-plugins/tmux-prefix-highlight
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'



# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
